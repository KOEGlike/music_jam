@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:ital,wght@0,100..700;1,100..700&display=swap');

$colors: (
	"bg": #343434,
	"glass":#b5b5b5,
	"glass-border": #888888,
	"font":#ffffff,
	"shadow": #585858,
	"spotify": #1DB954,
	"ok": #00ff00,
	"err": #ff2020
);

$opacities: (
	"bg": 0.2,
	"border": 0.5,
	"hover": 0.3,
	"selected": 0.4,
);

$font-stack: "Roboto Mono", monospace;

$border: 1.5px solid rgba(map-get($colors, "glass-border"), map-get($opacities, "border"));

$border-radiuses: (
	"small": 10px,
	"medium": 25px,
	"large": 40px,
);

$element-heights: (
	"medium": 85px,
);

$blur: blur(12px);

:root {
	--dyn-unit:calc(min(1vw, 1vh) / 2);
}

$dyn-unit:calc(min(1vw, 1vh) / 2);

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-family: $font-stack;
}

html {
	overflow: hidden;
	--background-url: url("");

}



body {
	width: 100vw;
	height: 100vh;
	overflow: hidden;
	position: absolute;
	margin: 0;
}




main {
	background: radial-gradient(50% 50% at 50% 50%, rgba(0, 0, 0, 0.60) 0%, rgba(0, 0, 0, 0.75) 100%), var(--background-url);
	background-position: center;
	background-repeat: no-repeat;
	background-size: cover;
	width: 100vw;
	height: 100vh;
	margin: 0px;
	padding: 0px;
	position: absolute;
	border: none;
	overflow-y: scroll;
	overflow-x: hidden;
	display: flex;
	justify-content: center;
	align-items: center;
}

main::before {
	display: inline-block;
	content: '';
	position: fixed;
	overflow: hidden;
	width: calc(100% + -2 * -10vw);
	height: calc(100% + -2 * -10vh);
	background: inherit;
	filter: blur(8px);
	padding: 0;
	margin: 0;
	border: none;
	margin: -10vh -10vw;
	max-width: calc(100vw + -1 * -10vw);
}

main > * {
	scale: $scale-factor;
	margin: $margin-factor;
	margin-top: 0px;
}

/* width */
*::-webkit-scrollbar {
	width: 5px;
	height: 5px;
	background-color: transparent;
}

/* Track */
*::-webkit-scrollbar-track {
	box-shadow: none;
	color: transparent;
	background-color: transparent;
}

/* Handle */
*::-webkit-scrollbar-thumb {
	background: map-get($colors, "glass");
	opacity: map-get($opacities, "bg");
	border-radius: 10px;
}

/* Handle on hover */
@media (any-hover: hover) {
	*::-webkit-scrollbar-thumb:hover {
		opacity: map-get($opacities, "hover");
	}
}



.glass {
	box-sizing: border-box;
	background-color: rgba(map-get($colors, "glass"), map-get($opacities, "bg"));
	border: $border;
	backdrop-filter: $blur;
	color: map-get($colors, "font");
	width: 100%;
	height: 100%;
}

.glass-element {
	@extend .glass;
	transition: all 0.2s ease-in-out;
}


@media (any-hover: hover) {
	.glass-element:hover {
		background-color: rgba(map-get($colors, "glass"), map-get($opacities, "hover"));
	}
}

.glass-element:active,
.glass-element:focus {
	background-color: rgba(map-get($colors, "glass"), map-get($opacities, "selected"));
	outline: none;
}

.glass-element-err {
	@extend .glass-element;
	border-color: rgba(map-get($colors, "err"), map-get($opacities, "border"));
	background-color: rgba(map-get($colors, "err"), map-get($opacities, "bg"));
}

@media (any-hover: hover) {
	.glass-element-err:hover {
		background-color: rgba(map-get($colors, "err"), map-get($opacities, "hover"));
	}
}

.glass-element-err:active,
.glass-element-err:focus {
	background-color: rgba(map-get($colors, "err"), map-get($opacities, "selected"));
}

.glass-element-ok {
	@extend .glass-element;
	border-color: rgba(map-get($colors, "ok"), map-get($opacities, "border"));
	background-color: rgba(map-get($colors, "ok"), map-get($opacities, "bg"));
}

@media (any-hover: hover) {
	.glass-element-ok:hover {
		background-color: rgba(map-get($colors, "ok"), map-get($opacities, "hover"));
	}
}

.glass-element-ok:active,
.glass-element-ok:focus {
	background-color: rgba(map-get($colors, "ok"), map-get($opacities, "selected"));
}